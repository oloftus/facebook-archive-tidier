package com.oloftus.fbarchiveprocessor.gui;

import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.util.ArrayList;
import java.util.List;

import javax.swing.AbstractListModel;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.WindowConstants;

import com.oloftus.fbarchiveprocessor.GuiCommunicator;

public class MainWindow extends javax.swing.JFrame {
    
    private GuiCommunicator guiCommunicator;

    public MainWindow(GuiCommunicator guiCommunicator) {
        
        this.guiCommunicator = guiCommunicator;
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        GridBagConstraints gridBagConstraints;

        fileChooser = new JFileChooser();
        workingDialog = new JDialog();
        workingLabel = new JLabel();
        nameChooserFrame = new JDialog();
        nameChooserPanel = new JPanel();
        nameChooserLabel = new JLabel();
        nameChooserScrollPane = new JScrollPane();
        nameChooserList = new JList();
        nameChooserButton = new JButton();
        doneDialog = new JDialog();
        donePanel = new JPanel();
        doneLabel = new JLabel();
        doneButton = new JButton();
        mainPanel = new JPanel();
        archiveLocationLabel = new JLabel();
        archiveLocationPanel = new JPanel();
        archiveLocationButton = new JButton();
        archiveLocationFiller = new Box.Filler(new Dimension(10, 0), new Dimension(10, 0), new Dimension(10, 32767));
        archiveLocationField = new JTextField();
        outputLocationLabel = new JLabel();
        outputLocationPanel = new JPanel();
        outputLocationButton = new JButton();
        outputLocationFiller = new Box.Filler(new Dimension(10, 0), new Dimension(10, 0), new Dimension(10, 32767));
        outputLocationField = new JTextField();
        outputFormatLabel = new JLabel();
        outputFormatComboBox = new JComboBox();
        goButton = new JButton();

        workingDialog.setMinimumSize(new Dimension(300, 100));
        workingDialog.setModal(true);
        workingDialog.setUndecorated(true);
        workingDialog.setResizable(false);
        workingDialog.getContentPane().setLayout(new GridBagLayout());

        workingLabel.setText("Working... Please wait.");
        workingDialog.getContentPane().add(workingLabel, new GridBagConstraints());

        nameChooserFrame.setModal(true);
        nameChooserFrame.setResizable(false);
        nameChooserFrame.getContentPane().setLayout(new FlowLayout(FlowLayout.CENTER, 10, 10));

        nameChooserPanel.setLayout(new GridBagLayout());

        nameChooserLabel.setText("Select all the names you are known by on Facebook");
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = GridBagConstraints.WEST;
        nameChooserPanel.add(nameChooserLabel, gridBagConstraints);

        nameChooserList.setModel(new AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        nameChooserScrollPane.setViewportView(nameChooserList);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = GridBagConstraints.WEST;
        gridBagConstraints.insets = new Insets(5, 0, 20, 0);
        nameChooserPanel.add(nameChooserScrollPane, gridBagConstraints);

        nameChooserButton.setText("Confirm");
        nameChooserButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                nameChooserButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = GridBagConstraints.EAST;
        nameChooserPanel.add(nameChooserButton, gridBagConstraints);

        nameChooserFrame.getContentPane().add(nameChooserPanel);

        doneDialog.getContentPane().setLayout(new FlowLayout(FlowLayout.CENTER, 10, 10));

        donePanel.setLayout(new GridBagLayout());

        doneLabel.setText("Done!");
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.insets = new Insets(5, 0, 20, 0);
        donePanel.add(doneLabel, gridBagConstraints);

        doneButton.setText("OK");
        doneButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                doneButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        donePanel.add(doneButton, gridBagConstraints);

        doneDialog.getContentPane().add(donePanel);

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setTitle("Facebook archive message cleaner");
        setBounds(new Rectangle(49, 22, 0, 0));
        setResizable(false);
        getContentPane().setLayout(new FlowLayout(FlowLayout.CENTER, 10, 10));

        mainPanel.setLayout(new GridBagLayout());

        archiveLocationLabel.setText("Facebook archive");
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = GridBagConstraints.WEST;
        mainPanel.add(archiveLocationLabel, gridBagConstraints);

        archiveLocationPanel.setLayout(new BoxLayout(archiveLocationPanel, BoxLayout.LINE_AXIS));

        archiveLocationButton.setText("Choose");
        archiveLocationButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                archiveLocationButtonActionPerformed(evt);
            }
        });
        archiveLocationPanel.add(archiveLocationButton);
        archiveLocationPanel.add(archiveLocationFiller);

        archiveLocationField.setEnabled(false);
        archiveLocationField.setPreferredSize(new Dimension(400, 25));
        archiveLocationPanel.add(archiveLocationField);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new Insets(5, 0, 20, 0);
        mainPanel.add(archiveLocationPanel, gridBagConstraints);

        outputLocationLabel.setText("Output folder");
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = GridBagConstraints.WEST;
        mainPanel.add(outputLocationLabel, gridBagConstraints);

        outputLocationPanel.setLayout(new BoxLayout(outputLocationPanel, BoxLayout.LINE_AXIS));

        outputLocationButton.setText("Choose");
        outputLocationButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                outputLocationButtonActionPerformed(evt);
            }
        });
        outputLocationPanel.add(outputLocationButton);
        outputLocationPanel.add(outputLocationFiller);

        outputLocationField.setEnabled(false);
        outputLocationField.setPreferredSize(new Dimension(400, 25));
        outputLocationPanel.add(outputLocationField);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new Insets(5, 0, 20, 0);
        mainPanel.add(outputLocationPanel, gridBagConstraints);

        outputFormatLabel.setText("Output format");
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = GridBagConstraints.WEST;
        mainPanel.add(outputFormatLabel, gridBagConstraints);

        outputFormatComboBox.setModel(new DefaultComboBoxModel(new String[] { "HTML (Better for viewing)", "Text (Better for archiving)" }));
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = GridBagConstraints.WEST;
        gridBagConstraints.insets = new Insets(5, 0, 20, 0);
        mainPanel.add(outputFormatComboBox, gridBagConstraints);

        goButton.setText("Go");
        goButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                goButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = GridBagConstraints.EAST;
        mainPanel.add(goButton, gridBagConstraints);

        getContentPane().add(mainPanel);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void archiveLocationButtonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_archiveLocationButtonActionPerformed

        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int returnVal = fileChooser.showOpenDialog(this);

        if (returnVal == fileChooser.APPROVE_OPTION) {
            File inputArchive = fileChooser.getSelectedFile();
            guiCommunicator.setInputArchive(inputArchive);
            archiveLocationField.setText(inputArchive.getAbsolutePath());
        }
    }//GEN-LAST:event_archiveLocationButtonActionPerformed

    private void outputLocationButtonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_outputLocationButtonActionPerformed
        
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnVal = fileChooser.showOpenDialog(this);

        if (returnVal == fileChooser.APPROVE_OPTION) {
            File outputDirectory = fileChooser.getSelectedFile();
            guiCommunicator.setOutputDirectory(outputDirectory);
            outputLocationField.setText(outputDirectory.getAbsolutePath());
        }
    }//GEN-LAST:event_outputLocationButtonActionPerformed

    private void goButtonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_goButtonActionPerformed

        switch (outputFormatComboBox.getSelectedIndex()) {
            case 0:
                guiCommunicator.setOutputFormat(GuiCommunicator.OutputFormat.HTML);
                break;
            case 1:
                guiCommunicator.setOutputFormat(GuiCommunicator.OutputFormat.TEXT);
                break;
        }
        
        guiCommunicator.setParseDoneAction(new Runnable() {
            
            @Override
            public void run() {
            
                workingDialog.setVisible(false);
                
                DefaultListModel<String> participants = new DefaultListModel<String>();
                
                for (String participantName : guiCommunicator.getParticipants()) {
                    participants.addElement(participantName);
                }
                
                nameChooserList.setModel(participants);
                nameChooserFrame.pack();
                nameChooserFrame.setVisible(true);
            }
        });
        guiCommunicator.getGoAction().run();
        workingDialog.setVisible(true);
    }//GEN-LAST:event_goButtonActionPerformed

    private void nameChooserButtonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_nameChooserButtonActionPerformed

        nameChooserFrame.setVisible(false);
        List<String> selectedNames = nameChooserList.getSelectedValuesList();
        guiCommunicator.setMyNames(selectedNames);
        
        guiCommunicator.setWriteThreadsDoneAction(new Runnable() {
            
            @Override
            public void run() {
                workingDialog.setVisible(false);
                doneDialog.setVisible(true);
                doneDialog.pack();
            }
        });

        guiCommunicator.getConfirmMyNameAction().run();
        workingDialog.setVisible(true);
    }//GEN-LAST:event_nameChooserButtonActionPerformed

    private void doneButtonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_doneButtonActionPerformed
        
        doneDialog.setVisible(false);
    }//GEN-LAST:event_doneButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JButton archiveLocationButton;
    private JTextField archiveLocationField;
    private Box.Filler archiveLocationFiller;
    private JLabel archiveLocationLabel;
    private JPanel archiveLocationPanel;
    private JButton doneButton;
    private JDialog doneDialog;
    private JLabel doneLabel;
    private JPanel donePanel;
    private JFileChooser fileChooser;
    private JButton goButton;
    private JPanel mainPanel;
    private JButton nameChooserButton;
    private JDialog nameChooserFrame;
    private JLabel nameChooserLabel;
    private JList nameChooserList;
    private JPanel nameChooserPanel;
    private JScrollPane nameChooserScrollPane;
    private JComboBox outputFormatComboBox;
    private JLabel outputFormatLabel;
    private JButton outputLocationButton;
    private JTextField outputLocationField;
    private Box.Filler outputLocationFiller;
    private JLabel outputLocationLabel;
    private JPanel outputLocationPanel;
    private JDialog workingDialog;
    private JLabel workingLabel;
    // End of variables declaration//GEN-END:variables
}
